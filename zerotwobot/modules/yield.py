import html
import random
import time

import zerotwobot.modules.fun_strings as fun_strings
from zerotwobot import dispatcher
from zerotwobot.modules.disable import DisableAbleCommandHandler
from zerotwobot.modules.helper_funcs.chat_status import is_user_admin
from zerotwobot.modules.helper_funcs.extraction import extract_user
from telegram import ChatPermissions, ParseMode, Update
from telegram.error import BadRequest
from telegram.ext import CallbackContext

def attack(update: Update, context: CallbackContext):
    msg = update.effective_message
    reply_text = (
        msg.reply_to_message.reply_text if msg.reply_to_message else msg.reply_text
    )
    reply_text(
        "3 ATTACK POKEMONS\n\nNORMAL\n\nğŸ‘‰ Nidoking\nğŸ‘‰ Machamp\nğŸ‘‰ Victreebel\nğŸ‘‰ Dragonite\nğŸ‘‰ Tyranitar\nğŸ‘‰ Blaziken\nğŸ‘‰ Swampert\nğŸ‘‰ Shiftry\nğŸ‘‰ Salamence\nğŸ‘‰ Staraptor\nğŸ‘‰ Luxray\nğŸ‘‰ Garchomp\nğŸ‘‰ Rhyperior\nğŸ‘‰ Electivire\nğŸ‘‰ Mamoswine\nğŸ‘‰ Gallade\nğŸ‘‰ Emboar\nğŸ‘‰ Stoutland\nğŸ‘‰ Unfezant\nğŸ‘‰ Gigalith\nğŸ‘‰ Conkeldurr\nğŸ‘‰ Leavanny\nğŸ‘‰ Krookodile\nğŸ‘‰ Eelektross\nğŸ‘‰ Haxorus\nğŸ‘‰ Decidueye\nğŸ‘‰ Incineroar\nğŸ‘‰ Toucannon\nğŸ‘‰ Tsareena\n\nLEGENDARY\n\nğŸ‘‰ Groudon\nğŸ‘‰ Regigigas\nğŸ‘‰ Tornadus(Incarnate Forme)\nğŸ‘‰ Thundurus(Incarnate Forme)\nğŸ‘‰ Landorus(Therian Forme)\nğŸ‘‰ Terrakion\nğŸ‘‰ Zekrom\nğŸ‘‰ Kyurem(Black)\nğŸ‘‰ Tapu Bulu\nğŸ‘‰ Solgalao\nğŸ‘‰ Kartana\nğŸ‘‰ Necrozma Dusk mane\nğŸ‘‰ Melmetal",
    )

def defence(update: Update, context: CallbackContext):
    msg = update.effective_message
    reply_text = (
        msg.reply_to_message.reply_text if msg.reply_to_message else msg.reply_text
    )
    reply_text(
        "3 DEFENCE POKEMONS\n\nNORMAL\n\nğŸ‘‰ Poliwrath\nğŸ‘‰ Golem\nğŸ‘‰ Aggron\nğŸ‘‰ Metagross\nğŸ‘‰ Klinklang\nğŸ‘‰ Chesnaught\nğŸ‘‰ Kommo-o\n\nLEGENDARY\n\nğŸ‘‰ Regirock\nğŸ‘‰ Cobalion\nğŸ‘‰ Stakataka  ",
    )

def spa(update: Update, context: CallbackContext):
    msg = update.effective_message
    reply_text = (
        msg.reply_to_message.reply_text if msg.reply_to_message else msg.reply_text
    )
    reply_text(
        "3 SPECIAL ATTACK POKEMONS\n\nNORMAL\n\nğŸ‘‰ Charizard\nğŸ‘‰ Vileplume\nğŸ‘‰ Alakazam\nğŸ‘‰ Gengar\nğŸ‘‰ Typhlosion\nğŸ‘‰ Ampharos\nğŸ‘‰ Beautifly\nğŸ‘‰ Gardevoir\nğŸ‘‰ Empolion\nğŸ‘‰ Roserade\nğŸ‘‰ Magnezone\nğŸ‘‰ Magmortar\nğŸ‘‰ Porygon-Z \nğŸ‘‰ Samurott\nğŸ‘‰ Reuniclus\nğŸ‘‰ Vanilluxe\nğŸ‘‰ Chandelure\nğŸ‘‰ Hydreigon\nğŸ‘‰ Volcarona\nğŸ‘‰ Delphox\nğŸ‘‰ Primarina\nğŸ‘‰ Vikavolt\n\nLEGENDARY\n\nğŸ‘‰ Zapdos\nğŸ‘‰ Moltres\nğŸ‘‰ Mewtwo\nğŸ‘‰ Latios\nğŸ‘‰ Kyogre\nğŸ‘‰ Dialga\nğŸ‘‰ Palkia\nğŸ‘‰ Reshiram\nğŸ‘‰ Volcanion\nğŸ‘‰ Lunala\nğŸ‘‰ Xurkitree\nğŸ‘‰ Magearna\nğŸ‘‰ Naganadel\nğŸ‘‰ Blacephalon\nğŸ‘‰ Tapu Lele\nğŸ‘‰ Heatran\nğŸ‘‰ Thundurus(Therian Forme)\nğŸ‘‰ Landorus(Incarnate Forme)\nğŸ‘‰ Keldeo(Ordinary/Resolute)\nğŸ‘‰ Kyurem(White)\nğŸ‘‰ Hoopa(Confined/Unbound)\nğŸ‘‰ Necrozma Dawn Wings",
    )

def spd(update: Update, context: CallbackContext):
    msg = update.effective_message
    reply_text = (
        msg.reply_to_message.reply_text if msg.reply_to_message else msg.reply_text
    )
    reply_text(
        "3 SPECIAL DEFENCE POKEMONS\n\nNORMAL\n\nğŸ‘‰ Blastoise\nğŸ‘‰ Bellossom\nğŸ‘‰ Politoed\nğŸ‘‰ Dustox\nğŸ‘‰ Ludicolo\nğŸ‘‰ Gothitelle\nğŸ‘‰ Florges\nğŸ‘‰ Goodra\n\nLEGENDARY\n\nğŸ‘‰ Articuno\nğŸ‘‰ Lugia\nğŸ‘‰ Ho-oh\nğŸ‘‰ Regice\nğŸ‘‰ Latias\nğŸ‘‰ Cresselia\nğŸ‘‰ Virizion\nğŸ‘‰ Tapu Fini\nğŸ‘‰ Nihilego",
    )

def speed(update: Update, context: CallbackContext):
    msg = update.effective_message
    reply_text = (
        msg.reply_to_message.reply_text if msg.reply_to_message else msg.reply_text
    )
    reply_text(
        "3 SPEED POKEMONS\n\nNORMAL\n\nğŸ‘‰ Pidgeot\nğŸ‘‰ Raichu\nğŸ‘‰ Crobat\nğŸ‘‰ Jumpluff\nğŸ‘‰ Sceptile\nğŸ‘‰ Serperior\nğŸ‘‰ Greninja\nğŸ‘‰ Talonflame\n\nLEGENDARY\n\nğŸ‘‰ Shaymin\nğŸ‘‰ Scolipede\nğŸ‘‰ Pheromosa\nğŸ‘‰ Zeraora\nğŸ‘‰ Tapu Koko\nğŸ‘‰ Tornadus(Therian Forme)\nğŸ‘‰ Deoxys(Speed Forme)",
    )

ATTACK_HANDLER = DisableAbleCommandHandler("attack", attack, run_async=True)
DEFENCE_HANDLER = DisableAbleCommandHandler("defence", defence, run_async=True)
SPA_HANDLER = DisableAbleCommandHandler("spa", spa, run_async=True)
SPD_HANDLER = DisableAbleCommandHandler("spd", spd, run_async=True)
SPEED_HANDLER = DisableAbleCommandHandler("speed", speed, run_async=True)

dispatcher.add_handler(ATTACK_HANDLER)
dispatcher.add_handler(DEFENCE_HANDLER)
dispatcher.add_handler(SPA_HANDLER)
dispatcher.add_handler(SPD_HANDLER)
dispatcher.add_handler(SPEED_HANDLER)
